---
title: 安卓学习笔记
tags: 安卓开发
grammar_cjkRuby: true
---

[toc]

# 安卓基础知识
## 认识Android中的ACtivity组件

``` java
package com.example.administrator.androidactivity;

import android.content.Intent;
import android.net.Uri;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        //setContentView(R.layout.activity_main);
        setContentView(R.layout.my_layout);//指定布局加载，这里加载自己的布局
        findViewById(R.id.btnStartAnotherAty).setOnClickListener(new View.OnClickListener() {//注册点击click监听事件
            @Override
            public void onClick(View v) {
                //startActivity(new Intent(MainActivity.this,AnotherAty.class));执行新的活动
                startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse("http://www.firgavin.cn")));//跳转网页
              }
        });
    }
}
```
在新创建的活动中：

``` java
package com.example.administrator.androidactivity;

import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;

public class AnotherAty extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_another_aty);//指定一个加载布局
    }
}
```
这里注意下跳转网页的方法：

``` java
startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse("http://www.firgavin.cn")));
```
同样是Intent的中的方法，传递参数ACTION_VIEW和Uri.parse。



## Activity生命周期
![enter description here][1]

> 注意活动是否可见

> 多个活动时，前一个先onPause，新创建的onGreat-onStart-onResume，前一个再执行onStop（活动不可见时才执行）。

>重载这些方法可以在Monitor中观察比如

``` java
package cn.firgavin.activitylifecircle;

import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        System.out.println("onGreate");
    }

    @Override
    protected void onStart() {
        super.onStart();
        System.out.println("onStart");
    }

    @Override
    protected void onResume() {
        super.onResume();
        System.out.println("onResume");
    }

    @Override
    protected void onPause() {
        super.onPause();
        System.out.println("onPause");
    }

    @Override
    protected void onStop() {
        super.onStop();
        System.out.println("onStop");
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        System.out.println("onDestroy");
    }

    @Override
    protected void onRestart() {
        super.onRestart();
        System.out.println("onRestart");
    }
}
```


## 在Activity之间传递参数
### 直接传递参数
可以参考下面的传递数据包，总体思路一致，只是直接调用Intent中的方法：

``` java
	//为btnStartAty按钮注册click监听事件
        findViewById(R.id.btnStartAty).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent i = new Intent(MainActivity.this,TheAty.class);//Intent传递
                i.putExtra("data","Hello, jikexueyuan.com");
                startActivity(i);//开始活动
            }
        });
```
在TheAty中接收数据时：

``` java
@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_the_aty);

        Intent i = getIntent();//创建Intent来接收数据
        tv = (TextView) findViewById(R.id.tv);
        tv.setText(i.getStringExtra("data"));
    }
```
对于不同的数据类型，灵活选择最合适的Intent方法（适用不同的数据类型）即可。下面的传递Bundle可以看做是众多类型中的一种。


### 传递数据包Bundle
在MainActivity.java中：

``` java
package cn.firgavin.sentargs;

import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);//选择加载布局

		//为btnStartAty按钮注册click监听事件
        findViewById(R.id.btnStartAty).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent i = new Intent(MainActivity.this,TheAty.class);//Intent传递,从当前的活动传递到TheAty.class活动
                //i.putExtra("data","Hello, jikexueyuan.com");
                Bundle b = new Bundle();//新建数据包Bundle
                b.putString("name","jikexueyuan");//key&value
                b.putInt("age",2);
                i.putExtras(b);//向Intent中传递数据包b
                startActivity(i);//开始活动
            }
        });
    }
}
```
在另一个活动TheAty.java中：

``` java
package cn.firgavin.sentargs;

import android.content.Intent;
import android.net.Uri;
import android.support.v4.text.TextDirectionHeuristicCompat;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.widget.TextView;

import com.google.android.gms.appindexing.Action;
import com.google.android.gms.appindexing.AppIndex;
import com.google.android.gms.common.api.GoogleApiClient;

public class TheAty extends AppCompatActivity {

    private TextView tv;//布局中选择TextView故创建TextView类型的
    /**
     * ATTENTION: This was auto-generated to implement the App Indexing API.
     * See https://g.co/AppIndexing/AndroidStudio for more information.
     */

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_the_aty);

        Intent i = getIntent();//创建Intent来接收数据包
        Bundle data = i.getExtras();
        tv = (TextView) findViewById(R.id.tv);
        //tv.setText(i.getStringExtra("data"));
        tv.setText(String.format("name=%s,age=%d",data.getString("name"),data.getInt("age")));
        //向tv（TextView）中传递参数
    }

}
```

### 传递值对象
即在不同的活动之间传递用户自定义的数据类型；
首先自定义一个数据类型User：

``` java
package cn.firgavin.sentargs;

/**
 * Created by Administrator on 2016/9/21.
 */
public class User {
    private String name;
    private int age;

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public User(String name,int age){
    //构造函数
        this.name=name;
        this.age=age;
    }
}
```
其有两种传递方式，第一种采用Serializable，第二种采用Parcelable。
#### Serializable实现
首先在User类中继承

``` java
public class User implements Serializable {
```
MainActivity中，传入一个User型数据

``` java
findViewById(R.id.btnStartAty).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent i = new Intent(MainActivity.this,TheAty.class);
                //i.putExtra("data","Hello, jikexueyuan.com");
                //Bundle b = new Bundle();
                //b.putString("name","jikexueyuan");
                //b.putInt("age",2);
                //i.putExtras(b);
                i.putExtra("user",new User("firgavin.cn",2));
                startActivity(i);
            }
        });
```
在TheAty中接收来自主活动的数据

``` java
 protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_the_aty);

        Intent i = getIntent();
        //Bundle data = i.getExtras();

        tv = (TextView) findViewById(R.id.tv);
        //tv.setText(i.getStringExtra("data"));
        //tv.setText(String.format("name=%s,age=%d",data.getString("name"),data.getInt("age")));
        User user = (User) i.getSerializableExtra("user");//使用序列化的Intent方法
        tv.setText(String.format("name=%s,age=%d",user.getName(),user.getAge()));
    }
```

Serializable全自动实现，而Parcelable需要实现describeContents()和writeToPacel()两个方法。
#### Parcelable方法实现

``` java
package cn.firgavin.sentargs;

import android.os.Parcel;
import android.os.Parcelable;

import java.io.Serializable;

/**
 * Created by Administrator on 2016/9/21.
 */
public class User implements Parcelable {
    //public class User implements Serializable {
    private String name;
    private int age;

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public User(String name,int age){
        this.name=name;
        this.age=age;
    }

    @Override
    public int describeContents() {//自动生成默认的方法不需要改动
        return 0;
    }

    @Override
    public void writeToParcel(Parcel dest, int flags) {//根据User的具体类型来改写
        dest.writeString(getName());
        dest.writeInt(getAge());
    }

    public static final Creator<User> CREATOR =new Creator<User>() {//实现Create方法
        @Override
        public User createFromParcel(Parcel source) {
            return new User(source.readString(),source.readInt());
        }

        @Override
        public User[] newArray(int size) {
            return new User[size];//返回size
        }
    };
}

```
然后修改TheAty中的Intent方法为getParcelable

``` java
 @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_the_aty);

        Intent i = getIntent();
        //Bundle data = i.getExtras();

        tv = (TextView) findViewById(R.id.tv);
        //tv.setText(i.getStringExtra("data"));
        //tv.setText(String.format("name=%s,age=%d",data.getString("name"),data.getInt("age")));
        User user = (User) i.getParcelableExtra("user");//修改这里
        tv.setText(String.format("name=%s,age=%d",user.getName(),user.getAge()));
    }

```
Serializable由系统提供，操作简单，速度慢；Parcelable自己写方法，速度快。

### 传递数据回上一个Activity
首先在MainActivity的xml中加入一个TextView控件用于显示传回数据：

``` java
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:orientation="vertical"
    android:layout_height="match_parent"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    tools:context="cn.firgavin.sentargs.MainActivity">

   <Button
       android:layout_width="wrap_content"
       android:layout_height="wrap_content"
       android:id="@+id/btnStartAty"
       android:text="启动另一个Activity"/>

   <TextView
       android:layout_width="wrap_content"
       android:layout_height="wrap_content"
       android:id="@+id/textView"/>

</LinearLayout>

```
在TheAty的xml中添加一个EditText和Button用于提交数据：

``` java
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:orientation="vertical"
    android:paddingTop="@dimen/activity_vertical_margin"
    tools:context="cn.firgavin.sentargs.TheAty">

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/tv"/>

    <EditText
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/editText" />

    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Send Back"
        android:id="@+id/button" />

</LinearLayout>

```
之后再TheAty.java中添加Intent，同时为按钮注册监听事件：

``` java
package cn.firgavin.sentargs;

import android.content.Intent;
import android.net.Uri;
import android.support.v4.text.TextDirectionHeuristicCompat;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.EditText;
import android.widget.TextView;

import com.google.android.gms.appindexing.Action;
import com.google.android.gms.appindexing.AppIndex;
import com.google.android.gms.common.api.GoogleApiClient;

public class TheAty extends AppCompatActivity {

    private TextView tv;
    private EditText editText;
    /**
     * ATTENTION: This was auto-generated to implement the App Indexing API.
     * See https://g.co/AppIndexing/AndroidStudio for more information.
     */

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_the_aty);

        Intent i = getIntent();
        //Bundle data = i.getExtras();

        tv = (TextView) findViewById(R.id.tv);
        editText = (EditText) findViewById(R.id.editText);
        //tv.setText(i.getStringExtra("data"));
        //tv.setText(String.format("name=%s,age=%d",data.getString("name"),data.getInt("age")));
        User user = (User) i.getParcelableExtra("user");
        tv.setText(String.format("name=%s,age=%d",user.getName(),user.getAge()));

        findViewById(R.id.button).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent i =new Intent();
                i.putExtra("data",editText.getText().toString());
                setResult(1,i);
                finish();
            }
        });
    }

}

```
设置完后在MainActivity中用TextView呈现传回的数据：

``` java
package cn.firgavin.sentargs;

import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.TextView;

import java.io.Serializable;

public class MainActivity extends AppCompatActivity {

    private TextView textView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        textView = (TextView) findViewById(R.id.textView);

        findViewById(R.id.btnStartAty).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent i = new Intent(MainActivity.this,TheAty.class);
                //i.putExtra("data","Hello, jikexueyuan.com");
                //Bundle b = new Bundle();
                //b.putString("name","jikexueyuan");
                //b.putInt("age",2);
                //i.putExtras(b);
                i.putExtra("user",new User("firgavin.cn",2));
                //startActivity(i);
                startActivityForResult(i,0);
            }
        });
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);

        textView.setText("另一个Activity传回的数据是"+data.getStringExtra("data"));
    }
}

```
相对于单项传递，回传的主要不同在于使用startActivityForResult方法，重写了onActivityResult用于处理回传数据。子活动中使用setResult传回数据即可。


# 用户界面的编写
## Android基本布局

## Android常用控件
### 下拉菜的基本使用
在布局资源加载一个 Spinner控件：

``` java
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent"
android:paddingBottom="@dimen/activity_vertical_margin"
android:paddingLeft="@dimen/activity_horizontal_margin"
android:paddingRight="@dimen/activity_horizontal_margin"
android:paddingTop="@dimen/activity_vertical_margin"
android:orientation="vertical"
tools:context="cn.firgavin.learncomponents.MainActivity">

<Spinner//下拉菜单控件
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:id="@+id/spinner" />

</LinearLayout>
```
在对应的Activity中注册加载相应的功能：

``` java
package cn.firgavin.learncomponents;

import android.os.StrictMode;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Spinner;

public class MainActivity extends AppCompatActivity {

    private String[] dataSource = new String[]{"firgavin.cn","iwen","sunlight"};
    //下拉菜单的参数列表
    private Spinner s;//声明一个Spinner对象

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        s = (Spinner) findViewById(R.id.spinner);//通过findViewById找到布局中的下拉菜单
        s.setAdapter(new ArrayAdapter<String>(this,android.R.layout.simple_list_item_1,dataSource));//向下拉菜单中传入参数
        //对用户的选择设置监听事件
        s.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            @Override
            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                System.out.println("用户选择的是"+dataSource[position]);
            }

            @Override
            public void onNothingSelected(AdapterView<?> parent) {
				//没有选择的情况，不是默认第一个的么？
            }
        });
    }
}

```



# Android系统功能的调用

# Android下数据存储

# Android网络与通信

# Android混合编程

# Android开源库

# Android测试





  [1]: ./images/activity%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.png "activity生命周期.png"