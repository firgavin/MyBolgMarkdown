---
title: Tomcat与Apache、Nginx的区别 
tags: Tomcat
grammar_cjkRuby: true
---

- **http服务器(HTTP Server)**
HTTP服务器本质上也是一种应用程序——它通常运行在服务器之上，**绑定服务器的IP地址并监听某一个tcp端口来接收并处理HTTP请求**，这样客户端（一般来说是IE, Firefox，Chrome这样的浏览器）就能够通过HTTP协议来获取服务器上的网页（HTML格式）、文档（PDF格式）、音频（MP4格式）、视频（MOV格式）等等资源。
![客户端向HTTP服务器请求资源][1]


- **web容器(Web Container)**	
A web container (also known as a servlet container and compare "webtainer") is the component of a web server that interacts with Java servlets. A web container is responsible for managing the lifecycle of servlets, mapping a URL to a particular servlet and ensuring that the URL requester has the correct access-rights.<br>
A web container handles requests to servlets, JavaServer Pages (JSP) files, and other types of files that include server-side code. The Web container creates servlet instances, loads and unloads servlets, creates and manages request and response objects, and performs other servlet-management tasks.<br>
A web container implements the web component contract of the Java EE architecture, specifying a runtime environment for web components that includes security, concurrency, lifecycle management, transaction, deployment, and other services.
摘自维基百科。


这里的Apache指的是pache HTTP Server，Nginx同样也是一款开源的HTTP服务器软件。

Apache HTTP Server和Nginx本身不支持生成动态页面，但它们可以通过其他模块来支持（例如通过Shell、PHP、Python脚本程序来动态生成内容）。如果想要使用Java程序来动态生成资源内容，使用这一类HTTP服务器很难做到。**Java Servlet**技术以及衍生的**Java Server Pages**技术可以让Java程序也具有处理HTTP请求并且返回内容（由程序动态控制）的能力，**Tomcat**正是支持运行Servlet/JSP应用程序的容器（Container）:

![Tomcat运作示意图][2]

Tomcat运行在JVM之上，它和HTTP服务器一样，绑定IP地址并监听TCP端口，同时还包含以下指责：
- 管理Servlet程序的生命周期
- 将URL映射到指定的Servlet进行处理


虽然Tomcat也可以认为是HTTP服务器，但通常它仍然会和Nginx配合在一起使用：
- 动静态资源分离——运用Nginx的反向代理功能分发请求：所有动态资源的请求交给Tomcat，而静态资源的请求（例如图片、视频、CSS、JavaScript文件等）则直接由Nginx返回到浏览器，这样能大大减轻Tomcat的压力。
- 负载均衡，当业务压力增大时，可能一个Tomcat的实例不足以处理，那么这时可以启动多个Tomcat实例进行水平扩展，而Nginx的负载均衡功能可以把请求通过算法分发到各个不同的实例进行处理



  [1]: https://pic2.zhimg.com/904696074e077934e601f175913f42fd_b.png
  [2]: https://pic3.zhimg.com/2651b72ce2170336d10ad17fd020ae7a_b.png
